# GraphQL schema example
#
# https://gqlgen.com/getting-started/

input PagingQuery {
  page: Int!
  limit: Int!
}

input NewCart {
  sku: String!
  quantity: Int!
}

input NewProduct {
  sku: String!
  name: String!
  price: Float!
  quantity: Int!
}

input NewPromo {
  sku: String!
  promoType: String!
  minimalPurchased: Int!
  bonusProductSku: String!
  discount: Float!
  isActive: Boolean!
}

input CheckOutItem {
    contents: [NewCart!]!
}

type Cart {
  id: Int!
  sku: String!
  quantity: Int!
}

type Product {
  id: Int!
  sku: String!
  name: String!
  price: Float!
  quantity: Int!
}

type Promo {
  id: Int!
  sku: String!
  promoType: String!
  minimalPurchased: Int!
  bonusProductSku: String!
  discount: Float!
  isActive: Boolean!
}

type ResponseCheckout {
  total: Float!
}

type Products {
  edges: [Product!]!
  pageInfo: PageInfo!
}

type Promos {
  edges: [Promo!]!
  pageInfo: PageInfo!
}

type Carts {
  edges: [Cart!]!
  pageInfo: PageInfo!
}

type PageInfo {
  after: Int!
  before: Int!
  totalPage: Int!
  page: Int!
}

type Query {
  product(sku: String!): Product!
  allProducts(param: PagingQuery!): Products!
  promo(sku: String!): Promo!
  allActivePromo(param: PagingQuery!): Promos!
  cartList(param: PagingQuery!): Carts!
  checkout(input: CheckOutItem): ResponseCheckout!
}

type Mutation {
  createProduct(input: NewProduct): Product!
  createPromo(input: NewPromo): Promo!
  updateProduct(input: NewProduct): Product!
  updatePromo(input: NewPromo): Promo!
}